{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\TODO\\\\TODO\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport NewTodo from './components/NewTodo';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataTodo = [{\n  id: 1,\n  task: \"Give dog a bath\"\n}, {\n  id: 2,\n  task: \"Do laundry\"\n}, {\n  id: 3,\n  task: \"Vacuum floor\"\n}, {\n  id: 4,\n  task: \"Feed cat\"\n}, {\n  id: 5,\n  task: \"Change light bulbs\"\n}];\n\nfunction App() {\n  _s();\n\n  const [AddItem, setAddItem] = useState(dataTodo);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const addTodoHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"/todos\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const transformm = data.results.map(data => {\n        return {\n          id: data.id,\n          title: data.title\n        };\n      });\n      setAddItem(transformm);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    addTodoHandler();\n  }, [fetchMoviesHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 20\n  }, this);\n\n  if (data.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }, this);\n  } //    setAddItem((prevItem) => {\n  //      return [item, ...prevItem];\n  //    });\n  //  };\n  //GET Req\n  //  useEffect(() => {\n  //    fetch(\"/todos\")\n  //      .then((response) => response.json())\n  //      .then((responseData) => {\n  //        const loadedItems = [];\n  //        for (const key in responseData) {\n  //          loadedItems.push({\n  //            id: key,\n  //           //  title: responseData[key].title,\n  //          });\n  //        }\n  //        setAddItem(loadedItems);\n  //      });\n  //  }, [AddItem]);\n  //  useEffect(() => {\n  //    console.log(\"TODOS\", AddItem);\n  //  }, [AddItem]);\n\n\n  const deleteItem = id => {\n    console.log(id);\n    const updatedItem = AddItem.filter(item => {\n      return item.id !== id;\n    });\n    setAddItem(updatedItem);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      detail: AddItem,\n      onDelete: deleteItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTodo, {\n      onAddTodo: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"P8pl6DzAZWgghn2ubVI9DD/Z7Bo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Downloads/TODO/TODO/src/App.js"],"names":["React","useState","useEffect","useCallback","NewTodo","TodoList","dataTodo","id","task","App","AddItem","setAddItem","isLoading","setIsLoading","error","setError","addTodoHandler","response","fetch","ok","Error","data","json","transformm","results","map","title","message","fetchMoviesHandler","content","length","deleteItem","console","log","updatedItem","filter","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAsCC,WAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AACA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADe,EAKf;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALe,EASf;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATe,EAaf;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbe,EAiBf;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjBe,CAAjB;;AAuBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACK,QAAD,CAAtC;AACD,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACI,QAAMe,cAAc,GAAGb,WAAW,CAAC,YAAY;AAC7CU,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,UAAU,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBJ,IAAD,IAAU;AAC5C,eAAO;AACLd,UAAAA,EAAE,EAAEc,IAAI,CAACd,EADJ;AAELmB,UAAAA,KAAK,EAAEL,IAAI,CAACK;AAFP,SAAP;AAID,OALkB,CAAnB;AAMAf,MAAAA,UAAU,CAACY,UAAD,CAAV;AACD,KAfD,CAeE,OAAOT,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACa,OAAP,CAAR;AACD;;AACDd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAtBiC,EAsB/B,EAtB+B,CAAlC;AAwBAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACY,kBAAD,CAFM,CAAT;;AAIA,MAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIR,IAAI,CAACS,MAAL,GAAc,CAAlB,EAAqB;AACnBD,IAAAA,OAAO,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAER;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIP,KAAJ,EAAW;AACTe,IAAAA,OAAO,gBAAG;AAAA,gBAAIf;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbiB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GA5CS,CA+Cf;AACA;AACA;AACA;AAEC;AAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;AAGE,QAAME,UAAU,GAAIxB,EAAD,IAAQ;AACzByB,IAAAA,OAAO,CAACC,GAAR,CAAY1B,EAAZ;AACA,UAAM2B,WAAW,GAAGxB,OAAO,CAACyB,MAAR,CAAgBC,IAAD,IAAU;AAC3C,aAAOA,IAAI,CAAC7B,EAAL,KAAYA,EAAnB;AACD,KAFmB,CAApB;AAGAI,IAAAA,UAAU,CAACuB,WAAD,CAAV;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAExB,OAAlB;AAA2B,MAAA,QAAQ,EAAEqB;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEf;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3FQP,G;;KAAAA,G;AA6FT,eAAeA,GAAf","sourcesContent":["import React , {useState , useEffect ,useCallback}from 'react'\nimport NewTodo from './components/NewTodo'\n\nimport TodoList from './components/TodoList'\nconst dataTodo = [\n  {\n    id: 1,\n    task: \"Give dog a bath\",\n  },\n  {\n    id: 2,\n    task: \"Do laundry\",\n  },\n  {\n    id: 3,\n    task: \"Vacuum floor\",\n  },\n  {\n    id: 4,\n    task: \"Feed cat\",\n  },\n  {\n    id: 5,\n    task: \"Change light bulbs\",\n  },\n];\n\nfunction App() {\n  const [AddItem, setAddItem] = useState(dataTodo);\n const [isLoading, setIsLoading] = useState(false);\n const [error, setError] = useState(null);\n     const addTodoHandler = useCallback(async () => {\n       setIsLoading(true);\n       setError(null);\n       try {\n         const response = await fetch(\"/todos\");\n         if (!response.ok) {\n           throw new Error(\"Something went wrong!\");\n         }\n\n         const data = await response.json();\n\n         const transformm = data.results.map((data) => {\n           return {\n             id: data.id,\n             title: data.title,\n           };\n         });\n         setAddItem(transformm);\n       } catch (error) {\n         setError(error.message);\n       }\n       setIsLoading(false);\n     }, []);\n\n     useEffect(() => {\n       addTodoHandler();\n     }, [fetchMoviesHandler]);\n\n     let content = <p>Found no data.</p>;\n\n     if (data.length > 0) {\n       content = <MoviesList data={data} />;\n     }\n\n     if (error) {\n       content = <p>{error}</p>;\n     }\n\n     if (isLoading) {\n       content = <p>Loading...</p>;\n     }\n\n\n//    setAddItem((prevItem) => {\n//      return [item, ...prevItem];\n//    });\n//  };\n\n //GET Req\n\n//  useEffect(() => {\n//    fetch(\"/todos\")\n//      .then((response) => response.json())\n     \n//      .then((responseData) => {\n//        const loadedItems = [];\n//        for (const key in responseData) {\n//          loadedItems.push({\n//            id: key,\n//           //  title: responseData[key].title,\n//          });\n//        }\n//        setAddItem(loadedItems);\n//      });\n//  }, [AddItem]);\n\n\n\n//  useEffect(() => {\n//    console.log(\"TODOS\", AddItem);\n//  }, [AddItem]);\n\n        \n  const deleteItem = (id) => {\n    console.log(id);\n    const updatedItem = AddItem.filter((item) => {\n      return item.id !== id;\n    });\n    setAddItem(updatedItem);\n  };\n\n  return (\n    <div className=\"App-header\">\n      <TodoList detail={AddItem} onDelete={deleteItem} />\n      <NewTodo onAddTodo={addTodoHandler} />\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}